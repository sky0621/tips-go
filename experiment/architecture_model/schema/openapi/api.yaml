openapi: 3.0.3
info:
  title: API
  description: API
  version: 1.0.0
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: /api/v1
    description: API v1
security: []
paths:
  /contents:
    get:
      summary: コンテンツ一覧取得
      operationId: getContents
      parameters:
        - $ref: '#/components/parameters/ContentPartialNameQuery'
      responses:
        '200':
          description: 'OK: コンテンツ一覧を返却する。'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContentResponse'
    post:
      summary: コンテンツ新規登録
      operationId: postContents
      requestBody:
        description: コンテンツ新規登録リクエスト
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentRequest'
      responses:
        '201':
          description: 'Created: コンテンツを新規登録した場合'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentResponse'
        '400':
          description: 'Bad Request: 無効なパラメータが指定された場合'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-BadRequest'
  /contents/{id}:
    get:
      summary: 指定コンテンツ取得
      operationId: getContentsByID
      parameters:
        - $ref: '#/components/parameters/ContentIDQuery'
      responses:
        '200':
          description: 'OK: 指定コンテンツを返却する。'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentResponse'
        '400':
          description: 'Bad Request: 無効なパラメータが指定された場合'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-BadRequest'
        '404':
          description: 'Not Found: 指定コンテンツが存在しない場合'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-NotFound'
  /courses:
    get:
      summary: コース一覧取得
      operationId: getCourses
      parameters:
        - $ref: '#/components/parameters/CourseLevelQuery'
      responses:
        '200':
          description: 'OK: コース一覧を返却する。'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseResponse'
        '400':
          description: 'Bad Request: 無効なパラメータが指定された場合'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-BadRequest'
    post:
      summary: コース新規登録
      operationId: postCourses
      requestBody:
        description: コース新規登録リクエスト
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
      responses:
        '201':
          description: 'Created: コースを新規登録した場合'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseResponse'
        '400':
          description: 'Bad Request: 無効なパラメータが指定された場合'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-BadRequest'
components:
  schemas:
    ContentName:
      type: string
      description: コンテンツ名
      example: コンテンツの名前
    ContentId:
      type: string
      description: コンテンツを一意に識別するID（フォーマットはUUID v7）
      example: 01964882-c142-7128-b08e-0faeeb8e598b
      x-go-name: ContentID
    ProgramId:
      type: string
      description: 問題を一意に識別するID（フォーマットはUUID v7）
      example: 01964882-c142-7128-b08e-0faeeb8e598b
      x-go-name: ProgramID
    ProgramQuestion:
      type: string
      description: 問題
      example: 問題
    ProgramAnswer:
      type: string
      description: 解答
      example: 解答
    ProgramResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ProgramId'
        question:
          $ref: '#/components/schemas/ProgramQuestion'
        answer:
          $ref: '#/components/schemas/ProgramAnswer'
      required:
        - id
    ContentResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ContentId'
        name:
          $ref: '#/components/schemas/ContentName'
        programs:
          type: array
          items:
            $ref: '#/components/schemas/ProgramResponse'
      required:
        - id
        - name
        - programs
    ProgramRequest:
      type: object
      properties:
        question:
          $ref: '#/components/schemas/ProgramQuestion'
        answer:
          $ref: '#/components/schemas/ProgramAnswer'
      required:
        - question
        - answer
    ContentRequest:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ContentName'
        programs:
          type: array
          items:
            $ref: '#/components/schemas/ProgramRequest'
      required:
        - name
        - programs
    ErrorMessage:
      type: string
      description: エラーメッセージ
      example: Unexpected error occurred
    400-BadRequest:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
    404-NotFound:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
    CourseLevel:
      type: string
      description: コースレベル
      example: コースのレベル（low:低、middle:中、high:高）
      enum:
        - low
        - middle
        - high
    CourseId:
      type: string
      description: コースを一意に識別するID（フォーマットはUUID v7）
      example: 01964882-c142-7128-b08e-0faeeb8e598b
      x-go-name: CourseID
    CourseName:
      type: string
      description: コース名
      example: コースの名前
    CourseResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CourseId'
        name:
          $ref: '#/components/schemas/CourseName'
        level:
          $ref: '#/components/schemas/CourseLevel'
      required:
        - id
        - name
        - level
    CourseRequest:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/CourseName'
        level:
          $ref: '#/components/schemas/CourseLevel'
      required:
        - name
        - level
  parameters:
    ContentPartialNameQuery:
      name: partialName
      description: コンテンツ名の部分一致検索用文字列
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/ContentName'
    ContentIDQuery:
      name: id
      description: コンテンツID文字列
      in: path
      required: true
      x-go-name: ID
      schema:
        $ref: '#/components/schemas/ContentId'
    CourseLevelQuery:
      name: courseLevel
      description: コースレベル一致検索用文字列
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/CourseLevel'
